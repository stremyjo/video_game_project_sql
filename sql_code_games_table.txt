ALTER TABLE gamesRENAME COLUMN field1 TO id;SELECT * FROM games;ALTER TABLE gamesADD column year integer;UPDATE games SET year = SUBSTR(releasedate, 9, 4);COMMIT;SELECT year,    CASE        WHEN year > 2000 THEN 'new'        ELSE 'retro'    END AS game_typeFROM gamesLIMIT 10;ALTER TABLE gamesADD column game_type text;UPDATE gamesSET game_type = CASE    WHEN year > 2000 THEN 'new'    ELSE 'retro'  END;COMMIT;SELECT title, year, game_type, rating, playsFROM gamesLIMIT 10;SELECT title, year, game_type, rating, playsFROM gamesWHERE game_type = 'retro'ORDER BY RatingLIMIT 10;SELECT title, COUNT(*) AS 'count'FROM gamesGROUP BY titleHAVING count > 1;DELETE FROM gamesWHERE title IN (SELECT title    FROM games    GROUP BY title    HAVING COUNT(*) > 1);select count (id)FROM games;SELECT title, year, game_type, rating, playsFROM gamesWHERE game_type = 'retro' AND rating IS NOT NULLORDER BY Rating DESCLIMIT 10;SELECT title, year, game_type, rating, playsFROM gamesWHERE game_type = 'new' AND rating IS NOT NULLORDER BY Rating DESCLIMIT 100;SELECT title, year, game_type, rating, playsFROM gamesWHERE game_type = 'new' AND rating IS NOT NULLORDER BY Rating DESCLIMIT 100;DELETE FROM gamesWHERE year NOT LIKE '19%' AND year NOT LIKE '20%';SELECT title, year, game_type, rating, playsFROM gamesWHERE game_type = 'new' AND rating IS NOT NULLORDER BY Rating DESCLIMIT 100;SELECT DISTINCT GenresFROM games;SELECT DISTINCT SUBSTR(genres, 1, INSTR(genres, ',') - 1) AS 'genres_new'FROM gamesWHERE genres IS NOT NULL AND genres LIKE '%';ALTER TABLE gamesDROP COLUMN Genres;ALTER TABLE gamesDROP COLUMN Reviews;ALTER TABLE gamesDROP COLUMN Summary;ALTER TABLE gamesDROP COLUMN Team;SELECT title, plays, ratingFROM gamesWHERE rating IS NOT NULLORDER BY rating DESCLIMIT 50;SELECT title, plays, game_type,    CASE        WHEN rating <= 1 THEN 'Bad'        WHEN rating <= 2 THEN 'Okay'        WHEN rating <= 3 THEN 'Good'        WHEN rating <= 4 THEN 'Great'        WHEN rating <= 5 THEN 'Amazing'    END AS ScoreFROM games;ALTER TABLE gamesADD COLUMN score VARCHAR(10);UPDATE gamesSET score =     CASE        WHEN rating <= 1 THEN 'Bad'        WHEN rating <= 2 THEN 'Okay'        WHEN rating <= 3 THEN 'Good'        WHEN rating <= 4 THEN 'Great'        WHEN rating <= 5 THEN 'Amazing'    END;UPDATE gamesSET plays = plays * CASE   WHEN substr(plays, -1) = 'k' THEN CAST(substr(plays, 1, length(plays) - 1) AS REAL) * 1000   ELSE CAST(plays AS REAL)   END;SELECT score, COUNT(score) AS score_count, AVG(plays) AS average_playsFROM gamesWHERE score IS NOT NULLGROUP BY score ORDER BY score_count DESC;SELECT score, COUNT(score) AS score_count, ROUND(AVG(plays)) AS average_playsFROM gamesWHERE score IS NOT NULLGROUP BY score ORDER BY score_count DESC;Select title, score, ratingFROM gamesWHERE score IS 'Bad';UPDATE gamesSET NumberofReviews = NumberofReviews * CASE   WHEN substr(NumberofReviews, -1) = 'k' THEN CAST(substr(NumberofReviews, 1, length(NumberofReviews) - 1) AS REAL) * 1000   ELSE CAST(NumberofReviews AS REAL)   END;   SELECT score, COUNT(score) AS score_count, ROUND(AVG(NumberofReviews)) AS average_review_countFROM gamesWHERE score IS NOT NULLGROUP BY score ORDER BY score_count DESC;      ALTER TABLE games   DROP column Playing;      ALTER TABLE games   DROP column Backlogs;      ALTER TABLE games   DROP column wishlist;      ALTER TABLE games   DROP column TimesListed;SELECT  g.id,   g.title,  go.genres,FROM games AS gLEFT JOIN games_original AS go  ON g.id = go.id  ORDER BY g.plays DESC   LIMIT 10;SELECTg.title, g.plays, g.game_typeFROM games AS gORDER  BY plays DESC;CREATE VIEW games_table_for_friend_project ASSELECT title, year, rating, game_type, score, playsFROM gamesWHERE Rating IS NOT NULLORDER BY Rating DESC;